//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OperatorLib.OperatorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/Database")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OperatorLib.OperatorService.AccountOffer AccountOfferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OperatorLib.OperatorService.Client ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IBANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_OfferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Tranzaction> TranzactionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Tranzaction> Tranzactions1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OperatorLib.OperatorService.AccountOffer AccountOffer {
            get {
                return this.AccountOfferField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountOfferField, value) != true)) {
                    this.AccountOfferField = value;
                    this.RaisePropertyChanged("AccountOffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OperatorLib.OperatorService.Client Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IBAN {
            get {
                return this.IBANField;
            }
            set {
                if ((object.ReferenceEquals(this.IBANField, value) != true)) {
                    this.IBANField = value;
                    this.RaisePropertyChanged("IBAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Client {
            get {
                return this.ID_ClientField;
            }
            set {
                if ((this.ID_ClientField.Equals(value) != true)) {
                    this.ID_ClientField = value;
                    this.RaisePropertyChanged("ID_Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Offer {
            get {
                return this.ID_OfferField;
            }
            set {
                if ((this.ID_OfferField.Equals(value) != true)) {
                    this.ID_OfferField = value;
                    this.RaisePropertyChanged("ID_Offer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Tranzaction> Tranzactions {
            get {
                return this.TranzactionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TranzactionsField, value) != true)) {
                    this.TranzactionsField = value;
                    this.RaisePropertyChanged("Tranzactions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Tranzaction> Tranzactions1 {
            get {
                return this.Tranzactions1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tranzactions1Field, value) != true)) {
                    this.Tranzactions1Field = value;
                    this.RaisePropertyChanged("Tranzactions1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountOffer", Namespace="http://schemas.datacontract.org/2004/07/Database")]
    [System.SerializableAttribute()]
    public partial class AccountOffer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account> AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DepositCommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WithdrawCommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WithdrawFixTaxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DepositCommission {
            get {
                return this.DepositCommissionField;
            }
            set {
                if ((this.DepositCommissionField.Equals(value) != true)) {
                    this.DepositCommissionField = value;
                    this.RaisePropertyChanged("DepositCommission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WithdrawCommission {
            get {
                return this.WithdrawCommissionField;
            }
            set {
                if ((this.WithdrawCommissionField.Equals(value) != true)) {
                    this.WithdrawCommissionField = value;
                    this.RaisePropertyChanged("WithdrawCommission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WithdrawFixTax {
            get {
                return this.WithdrawFixTaxField;
            }
            set {
                if ((this.WithdrawFixTaxField.Equals(value) != true)) {
                    this.WithdrawFixTaxField = value;
                    this.RaisePropertyChanged("WithdrawFixTax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/Database")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account> AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNP {
            get {
                return this.CNPField;
            }
            set {
                if ((object.ReferenceEquals(this.CNPField, value) != true)) {
                    this.CNPField = value;
                    this.RaisePropertyChanged("CNP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIN {
            get {
                return this.PINField;
            }
            set {
                if ((object.ReferenceEquals(this.PINField, value) != true)) {
                    this.PINField = value;
                    this.RaisePropertyChanged("PIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tranzaction", Namespace="http://schemas.datacontract.org/2004/07/Database")]
    [System.SerializableAttribute()]
    public partial class Tranzaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OperatorLib.OperatorService.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OperatorLib.OperatorService.Account Account1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Destination_CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_DestinationAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_SourceAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Source_CurrencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OperatorLib.OperatorService.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OperatorLib.OperatorService.Account Account1 {
            get {
                return this.Account1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Account1Field, value) != true)) {
                    this.Account1Field = value;
                    this.RaisePropertyChanged("Account1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Ammount {
            get {
                return this.AmmountField;
            }
            set {
                if ((this.AmmountField.Equals(value) != true)) {
                    this.AmmountField = value;
                    this.RaisePropertyChanged("Ammount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination_Currency {
            get {
                return this.Destination_CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.Destination_CurrencyField, value) != true)) {
                    this.Destination_CurrencyField = value;
                    this.RaisePropertyChanged("Destination_Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_DestinationAccount {
            get {
                return this.ID_DestinationAccountField;
            }
            set {
                if ((this.ID_DestinationAccountField.Equals(value) != true)) {
                    this.ID_DestinationAccountField = value;
                    this.RaisePropertyChanged("ID_DestinationAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_SourceAccount {
            get {
                return this.Id_SourceAccountField;
            }
            set {
                if ((this.Id_SourceAccountField.Equals(value) != true)) {
                    this.Id_SourceAccountField = value;
                    this.RaisePropertyChanged("Id_SourceAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source_Currency {
            get {
                return this.Source_CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.Source_CurrencyField, value) != true)) {
                    this.Source_CurrencyField = value;
                    this.RaisePropertyChanged("Source_Currency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OperatorService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsClientLoginValid", ReplyAction="http://tempuri.org/IService/IsClientLoginValidResponse")]
        int IsClientLoginValid(string cnp, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsClientLoginValid", ReplyAction="http://tempuri.org/IService/IsClientLoginValidResponse")]
        System.Threading.Tasks.Task<int> IsClientLoginValidAsync(string cnp, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsOperatorLoginValid", ReplyAction="http://tempuri.org/IService/IsOperatorLoginValidResponse")]
        int IsOperatorLoginValid(string cnp, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsOperatorLoginValid", ReplyAction="http://tempuri.org/IService/IsOperatorLoginValidResponse")]
        System.Threading.Tasks.Task<int> IsOperatorLoginValidAsync(string cnp, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClientAccounts", ReplyAction="http://tempuri.org/IService/GetClientAccountsResponse")]
        System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account> GetClientAccounts(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClientAccounts", ReplyAction="http://tempuri.org/IService/GetClientAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account>> GetClientAccountsAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangeClientPin", ReplyAction="http://tempuri.org/IService/ChangeClientPinResponse")]
        bool ChangeClientPin(int clientId, string oldPin, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangeClientPin", ReplyAction="http://tempuri.org/IService/ChangeClientPinResponse")]
        System.Threading.Tasks.Task<bool> ChangeClientPinAsync(int clientId, string oldPin, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAccountTotal", ReplyAction="http://tempuri.org/IService/UpdateAccountTotalResponse")]
        bool UpdateAccountTotal(string iban, decimal newTotal, short factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAccountTotal", ReplyAction="http://tempuri.org/IService/UpdateAccountTotalResponse")]
        System.Threading.Tasks.Task<bool> UpdateAccountTotalAsync(string iban, decimal newTotal, short factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClients", ReplyAction="http://tempuri.org/IService/GetClientsResponse")]
        System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Client> GetClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClients", ReplyAction="http://tempuri.org/IService/GetClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Client>> GetClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAccounts", ReplyAction="http://tempuri.org/IService/GetAccountsResponse")]
        System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account> GetAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAccounts", ReplyAction="http://tempuri.org/IService/GetAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account>> GetAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAccountOffers", ReplyAction="http://tempuri.org/IService/GetAccountOffersResponse")]
        System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.AccountOffer> GetAccountOffers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAccountOffers", ReplyAction="http://tempuri.org/IService/GetAccountOffersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.AccountOffer>> GetAccountOffersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTranzactions", ReplyAction="http://tempuri.org/IService/GetTranzactionsResponse")]
        System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Tranzaction> GetTranzactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTranzactions", ReplyAction="http://tempuri.org/IService/GetTranzactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Tranzaction>> GetTranzactionsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : OperatorLib.OperatorService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<OperatorLib.OperatorService.IService>, OperatorLib.OperatorService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int IsClientLoginValid(string cnp, string password) {
            return base.Channel.IsClientLoginValid(cnp, password);
        }
        
        public System.Threading.Tasks.Task<int> IsClientLoginValidAsync(string cnp, string password) {
            return base.Channel.IsClientLoginValidAsync(cnp, password);
        }
        
        public int IsOperatorLoginValid(string cnp, string password) {
            return base.Channel.IsOperatorLoginValid(cnp, password);
        }
        
        public System.Threading.Tasks.Task<int> IsOperatorLoginValidAsync(string cnp, string password) {
            return base.Channel.IsOperatorLoginValidAsync(cnp, password);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account> GetClientAccounts(int clientId) {
            return base.Channel.GetClientAccounts(clientId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account>> GetClientAccountsAsync(int clientId) {
            return base.Channel.GetClientAccountsAsync(clientId);
        }
        
        public bool ChangeClientPin(int clientId, string oldPin, string newPin) {
            return base.Channel.ChangeClientPin(clientId, oldPin, newPin);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeClientPinAsync(int clientId, string oldPin, string newPin) {
            return base.Channel.ChangeClientPinAsync(clientId, oldPin, newPin);
        }
        
        public bool UpdateAccountTotal(string iban, decimal newTotal, short factor) {
            return base.Channel.UpdateAccountTotal(iban, newTotal, factor);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAccountTotalAsync(string iban, decimal newTotal, short factor) {
            return base.Channel.UpdateAccountTotalAsync(iban, newTotal, factor);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Client> GetClients() {
            return base.Channel.GetClients();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Client>> GetClientsAsync() {
            return base.Channel.GetClientsAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account> GetAccounts() {
            return base.Channel.GetAccounts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Account>> GetAccountsAsync() {
            return base.Channel.GetAccountsAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.AccountOffer> GetAccountOffers() {
            return base.Channel.GetAccountOffers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.AccountOffer>> GetAccountOffersAsync() {
            return base.Channel.GetAccountOffersAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Tranzaction> GetTranzactions() {
            return base.Channel.GetTranzactions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<OperatorLib.OperatorService.Tranzaction>> GetTranzactionsAsync() {
            return base.Channel.GetTranzactionsAsync();
        }
    }
}
